

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 30 18:53:58 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  001A                     _RCREG	set	26
   169  0019                     _TXREG	set	25
   170  0030                     _RB0	set	48
   171  0065                     _RCIF	set	101
   172  00C1                     _OERR	set	193
   173  0064                     _TXIF	set	100
   174  00C6                     _RX9	set	198
   175  00C4                     _CREN	set	196
   176  00C7                     _SPEN	set	199
   177  0099                     _SPBRG	set	153
   178  0430                     _TRISB0	set	1072
   179  04C6                     _TX9	set	1222
   180  04C5                     _TXEN	set	1221
   181  04C4                     _SYNC	set	1220
   182  04C2                     _BRGH	set	1218
   183  043F                     _TRISC7	set	1087
   184  043E                     _TRISC6	set	1086
   185                           
   186                           	psect	strings
   187  0003                     __pstrings:	
   188  0003                     stringtab:	
   189  0003                     __stringtab:	
   190  0003                     stringcode:	
   191                           ;	String table - string pointers are 1 byte each
   192                           
   193  0003                     stringdir:	
   194  0003  3000               	movlw	high stringdir
   195  0004  008A               	movwf	10
   196  0005  0804               	movf	4,w
   197  0006  0A84               	incf	4,f
   198  0007  0782               	addwf	2,f
   199  0008                     __stringbase:	
   200  0008  3400               	retlw	0
   201  0009                     __end_of__stringtab:	
   202  0009                     STR_1:	
   203  0009  3455               	retlw	85	;'U'
   204  000A  3441               	retlw	65	;'A'
   205  000B  3452               	retlw	82	;'R'
   206  000C  3454               	retlw	84	;'T'
   207  000D  3420               	retlw	32	;' '
   208  000E  3469               	retlw	105	;'i'
   209  000F  3473               	retlw	115	;'s'
   210  0010  3420               	retlw	32	;' '
   211  0011  3472               	retlw	114	;'r'
   212  0012  3465               	retlw	101	;'e'
   213  0013  3461               	retlw	97	;'a'
   214  0014  3464               	retlw	100	;'d'
   215  0015  3479               	retlw	121	;'y'
   216  0016  3420               	retlw	32	;' '
   217  0017  3474               	retlw	116	;'t'
   218  0018  346F               	retlw	111	;'o'
   219  0019  3420               	retlw	32	;' '
   220  001A  3473               	retlw	115	;'s'
   221  001B  3465               	retlw	101	;'e'
   222  001C  346E               	retlw	110	;'n'
   223  001D  3464               	retlw	100	;'d'
   224  001E  3420               	retlw	32	;' '
   225  001F  3461               	retlw	97	;'a'
   226  0020  346E               	retlw	110	;'n'
   227  0021  3464               	retlw	100	;'d'
   228  0022  3420               	retlw	32	;' '
   229  0023  3472               	retlw	114	;'r'
   230  0024  3465               	retlw	101	;'e'
   231  0025  3463               	retlw	99	;'c'
   232  0026  3465               	retlw	101	;'e'
   233  0027  3469               	retlw	105	;'i'
   234  0028  3476               	retlw	118	;'v'
   235  0029  3465               	retlw	101	;'e'
   236  002A  3420               	retlw	32	;' '
   237  002B  3464               	retlw	100	;'d'
   238  002C  3461               	retlw	97	;'a'
   239  002D  3474               	retlw	116	;'t'
   240  002E  3461               	retlw	97	;'a'
   241  002F  3400               	retlw	0
   242  0030                     STR_3:	
   243  0030  342D               	retlw	45	;'-'
   244  0031  342D               	retlw	45	;'-'
   245  0032  343E               	retlw	62	;'>'
   246  0033  344C               	retlw	76	;'L'
   247  0034  3445               	retlw	69	;'E'
   248  0035  3444               	retlw	68	;'D'
   249  0036  3420               	retlw	32	;' '
   250  0037  344F               	retlw	79	;'O'
   251  0038  3446               	retlw	70	;'F'
   252  0039  3446               	retlw	70	;'F'
   253  003A  340A               	retlw	10
   254  003B  3400               	retlw	0
   255  003C                     STR_2:	
   256  003C  342D               	retlw	45	;'-'
   257  003D  342D               	retlw	45	;'-'
   258  003E  343E               	retlw	62	;'>'
   259  003F  344C               	retlw	76	;'L'
   260  0040  3445               	retlw	69	;'E'
   261  0041  3444               	retlw	68	;'D'
   262  0042  3420               	retlw	32	;' '
   263  0043  344F               	retlw	79	;'O'
   264  0044  344E               	retlw	78	;'N'
   265  0045  340A               	retlw	10
   266  0046  3400               	retlw	0
   267                           
   268                           ; #config settings
   269  0000                     
   270                           	psect	cinit
   271  07FC                     start_initialization:	
   272  07FC                     __initialization:	
   273  07FC                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276  07FC                     __end_of__initialization:	
   277  07FC  0183               	clrf	3
   278  07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	cstackCOMMON
   281  0070                     __pcstackCOMMON:	
   282  0070                     ?_UART_Initialize:	
   283  0070                     ??_UART_Initialize:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_UART_TxChar:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ??_UART_TxChar:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_UART_TxString:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_UART_RxChar:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ??_UART_RxChar:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_main:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     UART_TxChar@bt:	
   305                           ; 1 bytes @ 0x0
   306                           
   307                           
   308                           ; 1 bytes @ 0x0
   309  0070                     	ds	1
   310  0071                     ??_UART_TxString:	
   311  0071                     UART_TxString@i:	
   312                           ; 1 bytes @ 0x1
   313                           
   314                           
   315                           ; 2 bytes @ 0x1
   316  0071                     	ds	2
   317  0073                     UART_TxString@data:	
   318                           
   319                           ; 1 bytes @ 0x3
   320  0073                     	ds	1
   321  0074                     ??_main:	
   322                           
   323                           ; 1 bytes @ 0x4
   324  0074                     	ds	2
   325  0076                     main@value:	
   326                           
   327                           ; 2 bytes @ 0x6
   328  0076                     	ds	2
   329                           
   330                           	psect	maintext
   331  07AF                     __pmaintext:	
   332 ;;
   333 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   334 ;;
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 70 in file "Sample_UART.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;  value           2    6[COMMON] int 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : B00/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         2       0       0       0       0
   353 ;;      Temps:          2       0       0       0       0
   354 ;;      Totals:         4       0       0       0       0
   355 ;;Total ram usage:        4 bytes
   356 ;; Hardware stack levels required when called:    2
   357 ;; This function calls:
   358 ;;		_UART_Initialize
   359 ;;		_UART_RxChar
   360 ;;		_UART_TxChar
   361 ;;		_UART_TxString
   362 ;; This function is called by:
   363 ;;		Startup code after reset
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           
   368                           ;psect for function _main
   369  07AF                     _main:	
   370  07AF                     l729:	
   371                           ;incstack = 0
   372                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   373                           
   374                           
   375                           ;Sample_UART.c: 71:     TRISB0=0;
   376  07AF  1683               	bsf	3,5	;RP0=1, select bank1
   377  07B0  1303               	bcf	3,6	;RP1=0, select bank1
   378  07B1  1006               	bcf	6,0	;volatile
   379                           
   380                           ;Sample_UART.c: 72:     RB0=0;
   381  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   382  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   383  07B4  1006               	bcf	6,0	;volatile
   384  07B5                     l731:	
   385                           
   386                           ;Sample_UART.c: 73:     UART_Initialize();
   387  07B5  120A  118A  2772  120A  118A  	fcall	_UART_Initialize
   388  07BA                     l733:	
   389                           
   390                           ;Sample_UART.c: 74:     UART_TxString("UART is ready to send and receive data");
   391  07BA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   392  07BB  120A  118A  278A  120A  118A  	fcall	_UART_TxString
   393  07C0                     l735:	
   394                           
   395                           ;Sample_UART.c: 76:     {;Sample_UART.c: 77:         int value = UART_RxChar();
   396  07C0  120A  118A  2764  120A  118A  	fcall	_UART_RxChar
   397  07C5  00F4               	movwf	??_main
   398  07C6  01F5               	clrf	??_main+1
   399  07C7  0874               	movf	??_main,w
   400  07C8  00F6               	movwf	main@value
   401  07C9  0875               	movf	??_main+1,w
   402  07CA  00F7               	movwf	main@value+1
   403  07CB                     l737:	
   404                           
   405                           ;Sample_UART.c: 78:         if(value=='1')
   406  07CB  3031               	movlw	49
   407  07CC  0676               	xorwf	main@value,w
   408  07CD  0477               	iorwf	main@value+1,w
   409  07CE  1D03               	btfss	3,2
   410  07CF  2FD1               	goto	u81
   411  07D0  2FD2               	goto	u80
   412  07D1                     u81:	
   413  07D1  2FE2               	goto	l745
   414  07D2                     u80:	
   415  07D2                     l739:	
   416                           
   417                           ;Sample_UART.c: 79:         {;Sample_UART.c: 80:             RB0=1;
   418  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   419  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   420  07D4  1406               	bsf	6,0	;volatile
   421  07D5                     l741:	
   422                           
   423                           ;Sample_UART.c: 81:             UART_TxString("-->LED ON\n");
   424  07D5  3034               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   425  07D6  120A  118A  278A  120A  118A  	fcall	_UART_TxString
   426  07DB                     l743:	
   427                           
   428                           ;Sample_UART.c: 82:             UART_TxChar(10);
   429  07DB  300A               	movlw	10
   430  07DC  120A  118A  275A  120A  118A  	fcall	_UART_TxChar
   431                           
   432                           ;Sample_UART.c: 83:         }
   433  07E1  2FC0               	goto	l735
   434  07E2                     l745:	
   435  07E2  3030               	movlw	48
   436  07E3  0676               	xorwf	main@value,w
   437  07E4  0477               	iorwf	main@value+1,w
   438  07E5  1D03               	btfss	3,2
   439  07E6  2FE8               	goto	u91
   440  07E7  2FE9               	goto	u90
   441  07E8                     u91:	
   442  07E8  2FC0               	goto	l735
   443  07E9                     u90:	
   444  07E9                     l747:	
   445                           
   446                           ;Sample_UART.c: 85:         {;Sample_UART.c: 86:             RB0=0;
   447  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   448  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   449  07EB  1006               	bcf	6,0	;volatile
   450  07EC                     l749:	
   451                           
   452                           ;Sample_UART.c: 87:             UART_TxString("-->LED OFF\n");
   453  07EC  3028               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   454  07ED  120A  118A  278A  120A  118A  	fcall	_UART_TxString
   455  07F2                     l751:	
   456                           
   457                           ;Sample_UART.c: 88:             UART_TxChar(10);
   458  07F2  300A               	movlw	10
   459  07F3  120A  118A  275A  120A  118A  	fcall	_UART_TxChar
   460  07F8  2FC0               	goto	l735
   461  07F9  120A  118A  2800   	ljmp	start
   462  07FC                     __end_of_main:	
   463                           
   464                           	psect	text1
   465  078A                     __ptext1:	
   466 ;; *************** function _UART_TxString *****************
   467 ;; Defined at:
   468 ;;		line 51 in file "Sample_UART.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  data            1    wreg     PTR unsigned char 
   471 ;;		 -> STR_3(12), STR_2(11), STR_1(39), 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  data            1    3[COMMON] PTR unsigned char 
   474 ;;		 -> STR_3(12), STR_2(11), STR_1(39), 
   475 ;;  i               2    1[COMMON] int 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         3       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         3       0       0       0       0
   489 ;;Total ram usage:        3 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    1
   492 ;; This function calls:
   493 ;;		_UART_TxChar
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _UART_TxString
   501  078A                     _UART_TxString:	
   502                           
   503                           ;incstack = 0
   504                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   505                           ;UART_TxString@data stored from wreg
   506  078A  00F3               	movwf	UART_TxString@data
   507  078B                     l721:	
   508                           
   509                           ;Sample_UART.c: 51: void UART_TxString(unsigned char *data);Sample_UART.c: 52: {;Sample_
      +                          UART.c: 53:     int i;;Sample_UART.c: 54:     for(i=0;data[i]!='\0';i++)
   510  078B  01F1               	clrf	UART_TxString@i
   511  078C  01F2               	clrf	UART_TxString@i+1
   512  078D  2FA1               	goto	l727
   513  078E                     l723:	
   514                           
   515                           ;Sample_UART.c: 55:     {;Sample_UART.c: 56:         UART_TxChar(data[i]);
   516  078E  0871               	movf	UART_TxString@i,w
   517  078F  0773               	addwf	UART_TxString@data,w
   518  0790  0084               	movwf	4
   519  0791  120A  118A  2003  120A  118A  	fcall	stringdir
   520  0796  120A  118A  275A  120A  118A  	fcall	_UART_TxChar
   521  079B                     l725:	
   522                           
   523                           ;Sample_UART.c: 57:     }
   524  079B  3001               	movlw	1
   525  079C  07F1               	addwf	UART_TxString@i,f
   526  079D  1803               	skipnc
   527  079E  0AF2               	incf	UART_TxString@i+1,f
   528  079F  3000               	movlw	0
   529  07A0  07F2               	addwf	UART_TxString@i+1,f
   530  07A1                     l727:	
   531  07A1  0871               	movf	UART_TxString@i,w
   532  07A2  0773               	addwf	UART_TxString@data,w
   533  07A3  0084               	movwf	4
   534  07A4  120A  118A  2003  120A  118A  	fcall	stringdir
   535  07A9  3A00               	xorlw	0
   536  07AA  1D03               	skipz
   537  07AB  2FAD               	goto	u71
   538  07AC  2FAE               	goto	u70
   539  07AD                     u71:	
   540  07AD  2F8E               	goto	l723
   541  07AE                     u70:	
   542  07AE                     l49:	
   543  07AE  0008               	return
   544  07AF                     __end_of_UART_TxString:	
   545                           
   546                           	psect	text2
   547  075A                     __ptext2:	
   548 ;; *************** function _UART_TxChar *****************
   549 ;; Defined at:
   550 ;;		line 45 in file "Sample_UART.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  bt              1    wreg     unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  bt              1    0[COMMON] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         1       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         1       0       0       0       0
   568 ;;Total ram usage:        1 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_UART_TxString
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _UART_TxChar
   580  075A                     _UART_TxChar:	
   581                           
   582                           ;incstack = 0
   583                           ; Regs used in _UART_TxChar: [wreg]
   584                           ;UART_TxChar@bt stored from wreg
   585  075A  00F0               	movwf	UART_TxChar@bt
   586  075B                     l659:	
   587  075B                     l40:	
   588                           ;Sample_UART.c: 45: void UART_TxChar(unsigned char bt );Sample_UART.c: 46: {;Sample_UART
      +                          .c: 47:     while(!TXIF);
   589                           
   590  075B  1283               	bcf	3,5	;RP0=0, select bank0
   591  075C  1303               	bcf	3,6	;RP1=0, select bank0
   592  075D  1E0C               	btfss	12,4	;volatile
   593  075E  2F60               	goto	u11
   594  075F  2F61               	goto	u10
   595  0760                     u11:	
   596  0760  2F5B               	goto	l40
   597  0761                     u10:	
   598  0761                     l661:	
   599                           
   600                           ;Sample_UART.c: 48:     TXREG=bt;
   601  0761  0870               	movf	UART_TxChar@bt,w
   602  0762  0099               	movwf	25	;volatile
   603  0763                     l43:	
   604  0763  0008               	return
   605  0764                     __end_of_UART_TxChar:	
   606                           
   607                           	psect	text3
   608  0764                     __ptext3:	
   609 ;; *************** function _UART_RxChar *****************
   610 ;; Defined at:
   611 ;;		line 60 in file "Sample_UART.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      unsigned char 
   618 ;; Registers used:
   619 ;;		wreg
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0
   628 ;;      Totals:         0       0       0       0       0
   629 ;;Total ram usage:        0 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _UART_RxChar
   640  0764                     _UART_RxChar:	
   641  0764                     l689:	
   642                           ;incstack = 0
   643                           ; Regs used in _UART_RxChar: [wreg]
   644                           
   645                           
   646                           ;Sample_UART.c: 62:     if(OERR)
   647  0764  1283               	bcf	3,5	;RP0=0, select bank0
   648  0765  1303               	bcf	3,6	;RP1=0, select bank0
   649  0766  1C98               	btfss	24,1	;volatile
   650  0767  2F69               	goto	u31
   651  0768  2F6A               	goto	u30
   652  0769                     u31:	
   653  0769  2F6C               	goto	l53
   654  076A                     u30:	
   655  076A                     l691:	
   656                           
   657                           ;Sample_UART.c: 63:     {;Sample_UART.c: 64:         CREN=0;
   658  076A  1218               	bcf	24,4	;volatile
   659                           
   660                           ;Sample_UART.c: 65:         CREN=1;
   661  076B  1618               	bsf	24,4	;volatile
   662  076C                     l53:	
   663  076C  1E8C               	btfss	12,5	;volatile
   664  076D  2F6F               	goto	u41
   665  076E  2F70               	goto	u40
   666  076F                     u41:	
   667  076F  2F6C               	goto	l53
   668  0770                     u40:	
   669  0770                     l693:	
   670                           
   671                           ;Sample_UART.c: 68:     return RCREG;
   672  0770  081A               	movf	26,w	;volatile
   673  0771                     l56:	
   674  0771  0008               	return
   675  0772                     __end_of_UART_RxChar:	
   676                           
   677                           	psect	text4
   678  0772                     __ptext4:	
   679 ;; *************** function _UART_Initialize *****************
   680 ;; Defined at:
   681 ;;		line 31 in file "Sample_UART.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _UART_Initialize
   710  0772                     _UART_Initialize:	
   711  0772                     l663:	
   712                           ;incstack = 0
   713                           ; Regs used in _UART_Initialize: [wreg]
   714                           
   715                           
   716                           ;Sample_UART.c: 33:     TRISC6=0;
   717  0772  1683               	bsf	3,5	;RP0=1, select bank1
   718  0773  1303               	bcf	3,6	;RP1=0, select bank1
   719  0774  1307               	bcf	7,6	;volatile
   720                           
   721                           ;Sample_UART.c: 34:     TRISC7=1;
   722  0775  1787               	bsf	7,7	;volatile
   723  0776                     l665:	
   724                           
   725                           ;Sample_UART.c: 35:     SPBRG=((20000000/16)/9600)-1;
   726  0776  3081               	movlw	129
   727  0777  0099               	movwf	25	;volatile
   728  0778                     l667:	
   729                           
   730                           ;Sample_UART.c: 36:     BRGH=1;
   731  0778  1518               	bsf	24,2	;volatile
   732  0779                     l669:	
   733                           
   734                           ;Sample_UART.c: 37:     SYNC=0;
   735  0779  1218               	bcf	24,4	;volatile
   736  077A                     l671:	
   737                           
   738                           ;Sample_UART.c: 38:     SPEN=1;
   739  077A  1283               	bcf	3,5	;RP0=0, select bank0
   740  077B  1303               	bcf	3,6	;RP1=0, select bank0
   741  077C  1798               	bsf	24,7	;volatile
   742  077D                     l673:	
   743                           
   744                           ;Sample_UART.c: 39:     TXEN=1;
   745  077D  1683               	bsf	3,5	;RP0=1, select bank1
   746  077E  1303               	bcf	3,6	;RP1=0, select bank1
   747  077F  1698               	bsf	24,5	;volatile
   748  0780                     l675:	
   749                           
   750                           ;Sample_UART.c: 40:     CREN=1;
   751  0780  1283               	bcf	3,5	;RP0=0, select bank0
   752  0781  1303               	bcf	3,6	;RP1=0, select bank0
   753  0782  1618               	bsf	24,4	;volatile
   754  0783                     l677:	
   755                           
   756                           ;Sample_UART.c: 41:     TX9=0;
   757  0783  1683               	bsf	3,5	;RP0=1, select bank1
   758  0784  1303               	bcf	3,6	;RP1=0, select bank1
   759  0785  1318               	bcf	24,6	;volatile
   760  0786                     l679:	
   761                           
   762                           ;Sample_UART.c: 42:     RX9=0;
   763  0786  1283               	bcf	3,5	;RP0=0, select bank0
   764  0787  1303               	bcf	3,6	;RP1=0, select bank0
   765  0788  1318               	bcf	24,6	;volatile
   766  0789                     l37:	
   767  0789  0008               	return
   768  078A                     __end_of_UART_Initialize:	
   769  007E                     btemp	set	126	;btemp
   770  007E                     wtemp0	set	126


Data Sizes:
    Strings     62
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_TxString@data	PTR unsigned char  size(1) Largest target is 39
		 -> STR_3(CODE[12]), STR_2(CODE[11]), STR_1(CODE[39]), 


Critical Paths under _main in COMMON

    _main->_UART_TxString
    _UART_TxString->_UART_TxChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     264
                                              4 COMMON     4     4      0
                    _UART_Initialize
                        _UART_RxChar
                        _UART_TxChar
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (1) _UART_TxString                                        3     3      0     204
                                              1 COMMON     3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_RxChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Initialize
   _UART_RxChar
   _UART_TxChar
   _UART_TxString
     _UART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 30 18:53:58 2020

                       pc 0002               __CFG_CP$OFF 0000                        l40 075B  
                      l43 0763                        l37 0789                        l53 076C  
                      l56 0771                        l49 07AE                        u10 0761  
                      u11 0760                        u30 076A                        u31 0769  
                      u40 0770                        u41 076F                        u70 07AE  
                      u71 07AD                        u80 07D2                        u81 07D1  
                      u90 07E9                        u91 07E8                        fsr 0004  
             __CFG_LVP$ON 0000                       l721 078B                       l723 078E  
                     l731 07B5                       l661 0761                       l725 079B  
                     l741 07D5                       l733 07BA                       l671 077A  
                     l663 0772                       l727 07A1                       l751 07F2  
                     l743 07DB                       l735 07C0                       l673 077D  
                     l665 0776                       l745 07E2                       l737 07CB  
                     l729 07AF                       l675 0780                       l667 0778  
                     l691 076A                       l659 075B                       l747 07E9  
                     l739 07D2                       l677 0783                       l669 0779  
                     l693 0770                       l749 07EC                       l679 0786  
                     l689 0764                       _RB0 0030              __CFG_CPD$OFF 0000  
                     _RX9 00C6                       _TX9 04C6                       fsr0 0004  
            __CFG_FOSC$HS 0000                      STR_1 0009                      STR_2 003C  
                    STR_3 0030                      _BRGH 04C2                      _CREN 00C4  
                    _RCIF 0065                      _OERR 00C1                      _SPEN 00C7  
                    _TXEN 04C5                      _TXIF 0064                      _SYNC 04C4  
            __CFG_WRT$OFF 0000                      _main 07AF                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0000          ?_UART_Initialize 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _RCREG 001A  
                   _SPBRG 0099                     _TXREG 0019                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 07FC  
            __end_of_main 07FC                    ??_main 0074                    _TRISB0 0430  
                  _TRISC6 043E                    _TRISC7 043F              ?_UART_RxChar 0070  
          __CFG_PWRTE$OFF 0000              ?_UART_TxChar 0070   __end_of__initialization 07FC  
   __end_of_UART_TxString 07AF            __pcstackCOMMON 0070                __pmaintext 07AF  
              __stringtab 0003      __size_of_UART_RxChar 000E      __size_of_UART_TxChar 000A  
                 __ptext1 078A                   __ptext2 075A                   __ptext3 0764  
                 __ptext4 0772  __size_of_UART_Initialize 0018      end_of_initialization 07FC  
          UART_TxString@i 0071       start_initialization 07FC         ??_UART_Initialize 0070  
               ___latbits 0002    __size_of_UART_TxString 0025         UART_TxString@data 0073  
               __pstrings 0003             UART_TxChar@bt 0070             ??_UART_RxChar 0070  
           ??_UART_TxChar 0070             _UART_TxString 078A               __stringbase 0008  
               main@value 0076            ?_UART_TxString 0070       __end_of_UART_RxChar 0772  
     __end_of_UART_TxChar 0764        __end_of__stringtab 0009           _UART_Initialize 0772  
           __size_of_main 004D           ??_UART_TxString 0071               _UART_RxChar 0764  
               stringcode 0003               _UART_TxChar 075A   __end_of_UART_Initialize 078A  
                stringdir 0003                  stringtab 0003  
