
#include <stdio.h>
//#include <string.h>
//#include <stdio.h> 
#define MAX_SIZE 100

void str_rev();;
void str_len1();
void str_len2();
void binary_search();
void str_swapping();
void str_space_underscore();
void biggest_num();
void ascending();
void descending();
void binary_search();
void arr_rev();

char *ptr1_str, *ptr2_str;
char str1[MAX_SIZE], str2[MAX_SIZE], str3[MAX_SIZE];
int a[MAX_SIZE], b[MAX_SIZE], Binary_Arr[50], *ptr1_int;
int i, temp, j, str1_len, str2_len, len, len_of_str1 = 0, len_of_str2 = 0;
int Biggest_Num, count=0, temp, k=0, Binary_Num, len_binary, Binary_search_flag=0;
    
int main()
{
    ptr1_str = str1;
    ptr2_str = str2;
    
    printf("Enter the string 1: ");
    gets(str1);
    
    printf("Enter the string 2: ");
    gets(str2);

    ptr1_int = a;
    
    printf("Enter array length: ");
    scanf("%d", &len);
    printf("Enter the array elements: ");
    for(i=0; i<len; i++)
    {
        scanf("%d", ptr1_int);
        ptr1_int++;
    }
   
    str_len1();
    str_len2();
    str_rev();
    str_space_underscore();
    str_swapping();
    
    biggest_num();
    arr_rev();
    binary_search();
    ascending();
    descending();
    
    return 0;
}

void str_rev()
{
    
    j = len_of_str1;
    for(i=0; i<len_of_str1; i++)
    {
        str3[i] = str1[j-1];
        j--;
    }
	printf("\n\nInput:%s Reversed Input:%s",str1,str3);
}

void str_len1()
{
    for(i=0; str1[i]!='\0'; i++)
    {
        len_of_str1++;
    }
    printf("\nLength of String 1: %d", len_of_str1);
}

void str_len2()
{
    for(i=0; str2[i]!='\0'; i++)
    {
        len_of_str2++;
    }
    printf("\nLength of String 2: %d", len_of_str2);
}

void str_swapping()
{
    if(len_of_str1 > len_of_str2)
    {
        for(i=0; str1[i]!='\0';i++)
        {
            str3[i] = str1[i];
            str1[i] = str2[i];
            str2[i] = str3[i];
        }
    }
    
    else if(len_of_str2 > len_of_str1)
    {
        for(i=0; str2[i]!='\0';i++)
        {
            str3[i] = str1[i];
            str1[i] = str2[i];
            str2[i] = str3[i];
        }
    }
    
    else // Both str has equal length
    {
        for(i=0; str2[i]!='\0';i++)
        {
            str3[i] = str1[i];
            str1[i] = str2[i];
            str2[i] = str3[i];
        }
    }
    printf("\n\nString 1&2 are swapped:");
    printf("\nstr1 swapped: %s", str1);
    printf("\nstr2 swapped: %s", str2);
}

void str_space_underscore()
{
    for(i=0; i<len_of_str1; i++)
    {
        if(str1[i] == ' ')
        {
            str1[i] = '_';
        }
    }
    printf("\n\nReplacing Space with Underscore in String");
    printf("\nSpace with Underscore: %s ", str1);
}

void biggest_num()
{
    for(i=0; i<len; i++)
    {
        for(j=0; j<len; j++)
        {
            if(a[i] >= a[j])
            {
                count++;
            }
            if(count == len)
            {
                Biggest_Num = a[i];
            }
        }
        count = 0;
    }
    printf("\n\nBiggest Number in array: %d", Biggest_Num);
}


void ascending()
{
    for(i=0; i<len; i++)
    {
        for(j=i+1; j<len; j++)
        {
            if(a[i] >= a[j])
            {
                temp  = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
    printf("\n\nAscending Order: ");
    for(i=0; i<len; i++)
    {
        printf("%d ", a[i]);
    }
}


void descending()
{
    for(i=0; i<len; i++)
    {
        for(j=i+1; j<len; j++)
        {
            if(a[i] <= a[j])
            {
                temp  = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
    printf("\n\nDescending Order: ");
    for(i=0; i<len; i++)
    {
        printf("%d ", a[i]);
    }
}


void binary_search()
{
    printf("\n\nEnter the binary size: ");
    scanf("%d", &len_binary);
    printf("\nEnter Your Searching Number in Binary : ");
    for(i=0; i<len_binary; i++)
    {
        scanf("%d", &Binary_Arr[i]);
    }
    
    for(i=0; i<len; i++)
    {
        temp = a[i];
        for(j=0;temp>0;j++)    
        {    
            b[j]=temp%2;    
            temp=temp/2;
        } 
        for(k=0; k<j; k++)
        {
            if(b[k] == Binary_Arr[k])
            {
                count++;
                Binary_search_flag = 0;
            }
            else
                Binary_search_flag = 1;    
        }
        if(count == len_binary && Binary_search_flag == 0)
        {
            printf("\nBinary Search is: %d", a[i]);
            return 0;
        }
        count = 0;
    }
}


void arr_rev()
{
    for(i=0; i<len; i++)
    {
        b[i] = a[j-1];
        j--;
    }
    printf("\n\nArray Reverse: ");
    for(i=0; i<len; i++)
    {
        printf("%d ", b[i]);
    }
}